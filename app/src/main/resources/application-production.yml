spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID}
            clientSecret: ${GOOGLE_CLIENT_SECRET}
            redirectUri: https://api.masterello.com/{action}/oauth2/code/{registrationId}
            authorizationGrantType:
              - authorization_code
              - password
  datasource:
    password: ${DB_USERNAME}
    username: ${DB_PASSWORD}
    url: ${DB_URL}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: 'true'
    hibernate:
      ddl-auto: validate
  application:
    name: masterello-server
  sql:
    init:
      mode: always
  mail:
    host: smtp-relay.brevo.com
    username: ${EMAIL_USERNAME}
    password: ${EMAIL_PASSWORD}
    properties:
      mail:
        transport:
          protocol: smtp
        smtp:
          port: '587'
          starttls:
            enable: 'true'
            required: 'true'
          auth: 'true'

masterello:
  auth:
    token:
      access-token-ttl: 5m
      refresh-token-ttl: 24h
    google:
      verification-url: "https://oauth2.googleapis.com"
      success-redirect-url: "https://masterello.com/login/google"
      error-redirect-url: "https://masterello.com/login/google"
  user:
    email:
      enabled: true
      from: info@masterello.com
      subject: Please verify your registration
      sender: Masterello
  security:
    admin:
      enabled: true
      username: admin@masterello.com
      password: ${SUPER_ADMIN_PASS}
  file:
    spaces:
      accessKey: ${DO_SPACES_ACCESS_KEY}
      secretKey: ${DO_SPACES_SECRET_KEY}
      endpoint: ${DO_SPACES_ENDPOINT}
      region: ${DO_SPACES_REGION}
  openapi:
    oAuthFlow:
      tokenUrl: https:/api.masterello.com/oauth2/token
  monitoring:
    alert:
      channel: slack
    log:
      channel: grafana
    betterstack:
      apiKey: ${BETTER_STACK_API_KEY}
      endpoint: ${BETTER_STACK_ENDPOINT}
    grafana:
      api-key: ${GRAFANA_API_KEY}
      endpoint: https://logs-prod-012.grafana.net
      instance-id: 1280879
    slack:
      endpoint: ${SLACK_WEBHOOK}
      clientId: ${SLACK_CLIENT_ID}
      clientSecret: ${SLACK_CLIENT_SECRET}
  chat:
    ws:
      enabled: true
      allowedOriginPatterns:
      - https://*.masterello.com
      - https://masterello.com
  translation:
    deepl:
      apiKey: ${DEEPL_API_KEY}
  ai:
    enabled: true
    model: gpt-5-nano
    endpoint: https://api.openai.com/v1
    accessKey: ${OPEN_AI_API_KEY}

management:
  health:
    mail:
      enabled: false