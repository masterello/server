name: 'Build and Check'

on:
  workflow_call:

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build-and-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Test
        run: ./gradlew test -i
      - name: Build
        run: ./gradlew build
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  dependency-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build
        run: ./gradlew build -x test
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: 'masterello-server'
          path: '.'
          format: 'ALL'
          out: 'reports'
        timeout-minutes: 10
        continue-on-error: true
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports
      - name: Confirm report exists
        run: |
          echo "Checking report file..."
          ls -l reports
          file reports/dependency-check-report.html
          head -n 10 reports/dependency-check-report.html
      - uses: jwalton/gh-find-current-pr@v1
        id: finder
      # (Only the relevant job steps shown)
      - name: Count vulnerabilities from JSON
        id: count_vulns
        run: |
          REPORT=reports/dependency-check-report.json

          if [ -f "$REPORT" ]; then
            # ensure jq exists
            sudo apt-get update -y
            sudo apt-get install -y jq

            # get a newline-separated list of normalized severities (lowercase)
            SEVERITIES=$(jq -r '.dependencies[]?.vulnerabilities[]?.severity // empty' "$REPORT" \
              | tr '[:upper:]' '[:lower:]' \
              | sed 's/^highest$/critical/')

            # count each severity (exact line match)
            CRITICAL=$(echo "$SEVERITIES" | grep -c '^critical$')
            HIGH=$(echo "$SEVERITIES" | grep -c '^high$')
            MEDIUM=$(echo "$SEVERITIES" | grep -c '^medium$')
            LOW=$(echo "$SEVERITIES" | grep -c '^low$')
          else
            CRITICAL=0
            HIGH=0
            MEDIUM=0
            LOW=0
          fi

          echo "critical=$CRITICAL" >> "$GITHUB_OUTPUT"
          echo "high=$HIGH" >> "$GITHUB_OUTPUT"
          echo "medium=$MEDIUM" >> "$GITHUB_OUTPUT"
          echo "low=$LOW" >> "$GITHUB_OUTPUT"
      - name: Comment PR with Dependency Check Results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: vulnerability-scan
          number: ${{ steps.finder.outputs.pr }}
          recreate: true
          message: |
            ## Vulnerability Scan Results

            <details>
            <summary>See scan results</summary>

            ```
            Summary:
            - Critical severity vulnerabilities: ${{ steps.count_vulns.outputs.critical }}
            - High severity vulnerabilities: ${{ steps.count_vulns.outputs.high }}
            - Medium severity vulnerabilities: ${{ steps.count_vulns.outputs.medium }}
            - Low severity vulnerabilities: ${{ steps.count_vulns.outputs.low }}
            ```

            Please download the full report from the workflow artifacts.
            </details>
