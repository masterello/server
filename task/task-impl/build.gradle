plugins {
    id("org.jetbrains.kotlin.jvm") version "1.9.25"
    id("org.jetbrains.kotlin.plugin.spring") version "1.9.25"
}

dependencies {
    implementation project(":task-contract")
    implementation project(":worker-contract")
    implementation project(':common-security')
    implementation project(':auth-contract')


    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "com.github.java-json-tools:json-patch:1.13"
    implementation "io.github.oshai:kotlin-logging-jvm:5.1.4"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation  project(':auth-contract-test')
    testImplementation  project(':common-test')
    testImplementation  project(':worker-contract-test')

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework.boot:spring-boot-testcontainers"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.mockito:mockito-core:5.12.0"
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.postgresql:postgresql:42.6.0'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'com.github.tomakehurst:wiremock:3.0.1'
    testImplementation 'org.springframework:spring-test'
}


test {
    useJUnitPlatform()
}

bootJar {
    enabled = false  // Disable the bootJar task in non-application modules
}